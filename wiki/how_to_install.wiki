#labels Featured,Phase-Deploy
= Software installing instructions =

== Cellphone client ==
=== Software Dependencies ===
The client requires installing Python for S60 (version 1.3.22 or 1.4.0), and you can download it from [http://sourceforge.net/project/showfiles.php?group_id=154155 sourceforge]. Pay attention that there are different versions of PyS60 for 2ed and 3ed devices.

To install, copy the .sis files PythonForS60 and PythonScriptShell to your
cellphone and select them using the standard file browser application
of cellphone. Alternatively, you can see other ways to install
[http://wiki.opensource.nokia.com/projects/Installing_PyS60 here].

=== Installing ===
Create a folder in your cellphone memory card (E:\Python) or main
cellphone memory (C:\Python) and copy the contents of amora [http://amora.googlecode.com/files/amora_client-0.8.tar.bz2 client]
file distribution to this folder.

You must use python script shell (there is one icon for it in
'installed applications') to launch amora client (the file named
'presenter.py'). In python script shell, select 'Options->Run script'
and select 'presenter.py' in the list of available scripts.

Amora client should execute them, if you had followed all instructions.


== PC server ==
=== Software dependencies ==
For server side, to compile the source code, you will need:

  * gcc compiler
  * Xlibs
  * XTest libs
  * BlueZ libs
  * Imlib2 libs

And also XTest extension enabled in you X server (default on Ubuntu). So,
in Ubuntu simply run in your terminal:

$sudo apt-get install gcc libxext-dev libbluetooth2-dev libimlib2-dev libxtst-dev


=== Installing ===
After installing the dependencies, extract server app tarball with:

$ tar -zxvf amora_server-0.x.tar.gz

where _x_ is the *current* download version.

Change to the extracted directory and execute the following commands:

$mkdir build

$cd build

$../configure

$make

It will generate an executable file named 'amora', you must
start the application (and make sure that the bluetooth dongle is
connected to the computer):

$./amora


== Repository version ==

If you checked out the code from repository, you need first to generate the build system scripts. This one requires autotools packages (automake, etc).

You first run in the directory pc_server:

$ autoreconf -i --force

and then just follow previous instructions for tarball version.